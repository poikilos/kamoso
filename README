# visagebox

## Installation
* See "System Requirements" below for required packages
* Manually compile using KDevelop (see COMPILING.txt)
* In terminal, cd to the visagebox project folder (as the user who downloaded and compiled), then run:
  `bash install-visagebox-stopgap`

## Usage
* You must set a default printer (for automatic printing to work).
* Open the "photo booth" icon (on the desktop of the user who ran install-visagebox-stopgap, otherwise in application menu).
* Press blue star to start a session.
  Photos will print automatically if this program is setup properly (note and correct any errors shown by install-visagebox-stopgap).
  Sessions (6 photos each) are stored in Pictures (with date and time as subfolder name).

## Known Issues
* Should store template and scribus script in $PREFIX/lib/visagebox instead of $HOME/Pictures
* You must manually run the install-visagebox-stopgap script to install
* make install doesn't work yet
* still named kamoso internally
* pinning to KDE taskbar creates a shortcut to kamoso instead of visagebox

## Changes in poikilos (photo booth with printing) fork
(2018-04-27)
* switched back to 640x640 to work with approximately all webcams (and avoid freezing on cheap webcams)--otherwise has:
```
error debugMessage: Internal data stream error.
"gstbasesrc.c(2939): gst_base_src_loop (): /GstCameraBin:camerabin/GstWrapperCameraBinSrc:video_balance/GstBin:bin16/GstV4l2Src:v4l2src8:\nstreaming stopped, reason not-negotiated (-4)"
``` 
(2018-04-26)
* (webcamcontrol.cpp) changed default resolution from 640x480 to 800x600
* first full-featured version of fork (prints to default printer if scribus and lp are in path)
(forked from Kamoso)
* added COMPILING.txt (tips for compiling kamoso)
* (src/qml/Main.qml) Removed Mode objects for video (id:videoMode) and photo (id:photoMode) leaving only burstMode
* Hard code number of photos in burst (renamed to shoot) mode

## Credits
* Film_strip.svg (used in scribus file) By Nevit Dilmen [CC BY-SA 3.0 (https://creativecommons.org/licenses/by-sa/3.0) or GFDL (http://www.gnu.org/copyleft/fdl.html)], from Wikimedia Commons

## System Requirements
(see also COMPILING.txt if compiling from source)
scribus 1.5 (only 1.5 has python scripting from terminal; py file must be AFTER sla file, otherwise will say file not found in console output)
```
sudo dnf -y copr enable luya/scribus
sudo dnf remove -y scribus
sudo dnf install -y scribus
#manually patch issue in 1.5.1:
if [ -d /usr/share/scribus/icons/1_5_1 ]; then
  cd /usr/share/scribus/icons/1_5_1
  if [ ! -f zeichen.png ]; then
    sudo cp Zeichen.png zeichen.png
  fi
fi
#sudo dnf install -y scribus-generator
```

### More
We depend on the following gstreamer source modules:
gstreamer
gst-plugins-base
gst-plugins-good

And in more detail, on the following plugins (this information may be useful if your distribution package the gstreamer plugins in a different way):
tee
queue
gamma
v4l2src
alsasrc
filesink
fakesink
theoraenc
vorbisenc
xvimagesink
matroskamux
videobalance
ffmpegcolorspace

Also, to get Facebook support we depend of kipi-facebook (normally packaged just within kipi-plugins).

## Developer Notes
* scribus python file will not work if -py option is BEFORE the sla filename in the scribus command
